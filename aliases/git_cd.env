gcd_help() {
   /bin/echo "Usage to auto cd into a git project or other commands, see below:"
   /bin/echo -e "gcd Help:\nCommands: pushd, auto, pull, push, status, addall, editprojects"
   /bin/echo "Example: gcd myproject auto"
   /bin/echo "Note just \$ gcd      ----> will output all your defined git projects."
}

gcd_branch() {
   /bin/echo "You are on Git Branch:"
   /usr/bin/git branch --list
}

gcd() {
   #set -x
   local git_projects=~/.gitprojects
   if [ -z "$1" ]; then
      /bin/echo
   elif [ $1 == "help" ]; then
      gcd_help
      return 0
   elif [ $1 == "editprojects" ]; then
      $EDITOR "$git_projects"
      return 0
   elif [ $1 == "myproject" ]; then
      /bin/echo -e "Hmm....UNDEFINED"
      $EDITOR ${_ENV_PATH}git_cd.env
      return 0
   fi
     
   IFSOLD=$IFS
   IFS=',';
   found="false"
   while read -r label mycommand desc;
   do
      [[ $label =~ ^#.* ]] && continue
      if [ -z "$1" ]; then
         /bin/echo "gcd ${label} , PATH= ${mycommand}, DESC: ${desc}"
      else    
         [[ "$label" == "$1" ]] && { found="true"; break; }
      fi   
   done < "$git_projects"
   IFS=$IFSOLD
   
   if  [ "$found" == "true" ] && [ ! -z $mycommand ]; then
      if [ -z $2 ]; then
         cd "$mycommand"
         gcd_branch
      elif [ $2 == "pushd" ]; then
         popd
         pushd "$mycommand"
         gcd_branch
      elif [ $2 == "auto" ]; then
         /opt/profiles/scripts/git/dogit "$mycommand"
         cd "$mycommand"
      elif [ $2 == "pull" ]; then
         /opt/profiles/scripts/git/gpull "$mycommand"
      elif [ $2 == "push" ]; then 
         /opt/profiles/scripts/git/gpull-and-push "$mycommand"
      elif [ $2 == "status" ]; then
         cd "$mycommand"
         /usr/bin/git status
      elif [ $2 == "addall" ]; then
         cd "$mycommand"
         gcd_branch
         /usr/bin/git add .
         /usr/bin/git status
      else
         gcd_help
      fi    
   fi
   #set +x
}
